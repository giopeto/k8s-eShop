apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-dep
  namespace: k8s-eshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins
        image: giopeto/jenkins-with-docker:V2
        ports:
          - name: http-port
            containerPort: 8080
          - name: jnlp-port
            containerPort: 50000
        volumeMounts:
            - name: hostvol-jenkins
              mountPath: /var/jenkins_home
            - name: dockersock
              mountPath: "/var/run/docker.sock"
      volumes:
        - name: hostvol-jenkins
          persistentVolumeClaim:
            claimName: jenkins-pv-claim
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock 
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: jenkins-task-pv-volume
  labels:
    type: local
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /home/vagrant/persistent-volumes-k8s/jenkins
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pv-claim
  namespace: k8s-eshop
  labels:
    app: jenkinspv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: k8s-eshop
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30123
      protocol: TCP
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp-svc
  namespace: k8s-eshop
spec:
  type: ClusterIP
  ports:
    - port: 50000
      targetPort: 50000
  selector:
    app: jenkins