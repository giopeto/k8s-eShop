- Install virtual box
- Install vagrant
- Clone project
	-- git clone https://github.com/giopeto/k8s-eShop.git
- Navigate to vagrant-env folder
	-- cd k8s-eShop/vagrant-env
- Run vagrant provisioning
	-- vagrant up
- Vagrant user:password => vagrant:vagrant
- Install Jaeger operator on k8s
	kubectl create namespace observability
	kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/crds/jaegertracing_v1_jaeger_crd.yaml
	kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/service_account.yaml
	kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role.yaml
	kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role_binding.yaml
	kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/operator.yaml
- Deploy k8s-eShop application via kubernetes
	-- cd k8s-eShop && kubectl apply -f k8s/


## Optional
- Build maven-parent project
- cd maven-parent
- Get nexus server ip address
	- kubectl get svc nexus-svc -o jsonpath='{.spec.clusterIP}'
- Build parent project
	- sudo docker build --add-host=nexus.k8s-eshop.io:<NEXUS-SERVER-IP-ADDRESS> .


- Get grafana default password
	cat /var/snap/microk8s/current/credentials/basic_auth.csv
	MGJBOFh...,admin,admin,"system:masters"
	user is admin pass is first string(MGJBOFh...)


	**** Remote debug ****
Add debug port to service definition:
  ports:
    - name: store-service-web
      protocol: "TCP"
      # Port accessible inside cluster
      port: 8081
      # Port to forward to inside the pod
      targetPort: 8081
      # Port accessible outside cluster
      nodePort: 30102
    - name: store-service-debug
      protocol: "TCP"
      # Port accessible inside cluster
      port: 5005
      # Port to forward to inside the pod
      targetPort: 5005
      # Port accessible outside cluster
      nodePort: 30110

Change entrypoint in Dockerfile(add "-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n"):
	ENTRYPOINT ["java","-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n","-jar","/usr/app/app.jar"]

get pod name
	kubectl get pods

forward 5005 port
	kubectl port-forward <NODE_NAME>  5005:5005

